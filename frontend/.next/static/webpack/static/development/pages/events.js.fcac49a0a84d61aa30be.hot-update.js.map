{"version":3,"file":"static/webpack/static\\development\\pages\\events.js.fcac49a0a84d61aa30be.hot-update.js","sources":["webpack:///./components/Meetings.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Query, graphql } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport styled from \"styled-components\";\r\nimport Meeting from \"./Meeting\";\r\nimport GoogleMap from \"./GoogleMaps\";\r\nimport { perPage } from \"../config\";\r\n\r\nconst ALL_MEETINGS_QUERY = gql`\r\n  query ALL_MEETINGS_QUERY($skip: Int!, $first: Int) {\r\n    meetings(first: $first, skip: $skip, orderBy: createdAt_DESC) {\r\n      id\r\n      title\r\n      description\r\n      image\r\n      largeImage\r\n      startTime\r\n      endTime\r\n      lat\r\n      lng\r\n    }\r\n    meetingsConnection {\r\n      pageInfo {\r\n        hasNextPage\r\n        endCursor\r\n      }\r\n      edges {\r\n        cursor\r\n      }\r\n      aggregate {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Center = styled.div`\r\n  text-align: center;\r\n`;\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  grid-gap: 40px;\r\n`;\r\nconst MeetingsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 40px;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  margin: 0 auto;\r\n  cursor: pointer;\r\n`;\r\n\r\nclass Meetings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hasMore: true,\r\n      highlightedMarker: null\r\n    };\r\n    this.highlightMarker = this.highlightMarker.bind(this);\r\n  }\r\n  highlightMarker(meetingId) {\r\n    this.setState({ highlightedMarker: meetingId });\r\n  }\r\n  render() {\r\n    return (\r\n      <Center>\r\n        <p>Meetings!</p>\r\n        <Query\r\n          query={ALL_MEETINGS_QUERY}\r\n          variables={{\r\n            skip: 0,\r\n            first: 6\r\n          }}\r\n          fetchPolicy=\"network-only\"\r\n        >\r\n          {({ data, error, loading, fetchMore }) => {\r\n            if (loading) return <p>Loading ...</p>;\r\n            if (error) return <p>{error.message}</p>;\r\n            // first we decoustruct our payload, Gets the data from our query\r\n            return (\r\n              <Wrapper>\r\n                <MeetingsList>\r\n                  {data.meetings.map(meeting => {\r\n                    return (\r\n                      <InfiniteScroll\r\n                        pageStart={0}\r\n                        hasMore={this.state.hasMore}\r\n                        loadMore={() =>\r\n                          fetchMore({\r\n                            variables: {\r\n                              skip: data.meetings.length\r\n                            },\r\n                            updateQuery: (\r\n                              previousResult,\r\n                              { fetchMoreResult }\r\n                            ) => {\r\n                              {\r\n                                console.log(this.state.hasMore);\r\n                              }\r\n                              this.setState({\r\n                                hasMore:\r\n                                  data.meetingsConnection.aggregate.count >\r\n                                  data.meetings.lengthe\r\n                              });\r\n                              {\r\n                                console.log(this.state.hasMore);\r\n                              }\r\n                              if (!fetchMoreResult) {\r\n                                hasMore =\r\n                                  data.meetingsConnection.aggregate.count >\r\n                                  data.meetings.length;\r\n                                return previousResult;\r\n                              }\r\n\r\n                              return {\r\n                                ...fetchMoreResult,\r\n                                meetings: [\r\n                                  ...previousResult.meetings,\r\n                                  ...fetchMoreResult.meetings.filter(\r\n                                    newMeeting =>\r\n                                      !previousResult.meetings.some(\r\n                                        p => p.id === newMeeting.id\r\n                                      )\r\n                                  )\r\n                                ]\r\n                              };\r\n                            }\r\n                          })\r\n                        }\r\n                        loader={\r\n                          <div className=\"loader\" key={0}>\r\n                            Loading ...\r\n                          </div>\r\n                        }\r\n                      >\r\n                        <Meeting\r\n                          meeting={meeting}\r\n                          key={meeting.id}\r\n                          highlightMarker={this.highlightMarker}\r\n                        />\r\n                      </InfiniteScroll>\r\n                    );\r\n                  })}\r\n                </MeetingsList>\r\n                <GoogleMap\r\n                  meetings={data.meetings}\r\n                  highlightedMarker={this.state.highlightedMarker}\r\n                />\r\n              </Wrapper>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Center>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Meetings;\r\n\r\nexport { ALL_MEETINGS_QUERY };\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA4BA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAIA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AAPA;AAQA;AACA;;;AAAA;AACA;AAAA;AAAA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AADA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAAA;AAFA;AALA;AAYA;AAtCA;AADA;AA0CA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoDA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAIA;;;;AAxGA;AACA;AA0GA;;;;;A","sourceRoot":""}